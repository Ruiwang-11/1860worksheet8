CHIP DisplayCounter201890224 {
    IN inc, reset;
    OUT a, b, c, d, e, f, g;

   PARTS:
// 16-bit register to hold current count
Register(in=next_count, load=1, out=current);

// Increment current value
Inc16(in=current, out=inc_out);

// Check if incremented value is 16 (overflow)
Eq16(a=inc_out, b=16, out=is_overflow);

// Mux: if overflow, select 0; else select inc_out
Mux16(a=inc_out, b=0, sel=is_overflow, out=inc_or_zero);

// Mux: select between current or inc_or_zero based on inc
Mux16(a=current, b=inc_or_zero, sel=inc, out=next_inc);

// Mux: select between next_inc or 0 based on reset
Mux16(a=next_inc, b=0, sel=reset, out=next_count);

// 7-segment decoder for lower 4 bits of current count
SevenSegDecoder(in=current[0..3], a=a, b=b, c=c, d=d, e=e, f=f, g=g);